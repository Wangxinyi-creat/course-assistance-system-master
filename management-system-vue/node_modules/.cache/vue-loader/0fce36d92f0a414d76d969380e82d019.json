{"remainingRequest":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a-project\\course-assistance-system-master\\management-system-vue\\src\\views\\log\\operate-log.vue?vue&type=template&id=f0ed1bf4&","dependencies":[{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\src\\views\\log\\operate-log.vue","mtime":1713709431000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}