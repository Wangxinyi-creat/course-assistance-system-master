{"remainingRequest":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a-project\\course-assistance-system-master\\management-system-vue\\src\\views\\system\\role\\dialog.vue?vue&type=style&index=0&id=1cf3d83b&scoped=true&lang=css&","dependencies":[{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\src\\views\\system\\role\\dialog.vue","mtime":1713709431000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLXRyZWVzIHsKICBoZWlnaHQ6IDUyMHB4OwogIG1hcmdpbi1sZWZ0OiA1cHg7CiAgb3ZlcmZsb3c6IGF1dG8KfQoKLmRyYXdlci1idXR0b24gewogIG1hcmdpbi10b3A6IDMwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyCn0K"},{"version":3,"sources":["dialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"dialog.vue","sourceRoot":"src/views/system/role","sourcesContent":["<template>\n  <!--角色分配菜单  :default-checked-keys=\"checked\"-->\n  <el-drawer title=\"分配菜单\" :visible.sync=\"showTree\" size=\"25%\">\n    <el-tree\n        :data=\"tree\"\n        :props=\"defaultProps\"\n        show-checkbox\n        node-key=\"id\"\n        ref=\"tree\"\n        :default-expanded-keys=\"[5]\"\n        class=\"el-trees\">\n        <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n            <span><i :class=\"data.elIcon\"></i>{{ data.menuName }}</span>\n        </span>\n    </el-tree>\n    <div class=\"drawer-button\">\n      <el-button type=\"primary\" @click=\"submitTree\">确 定</el-button>\n      <el-button @click=\"cancel\">取 消</el-button>\n    </div>\n  </el-drawer>\n</template>\n\n\n<script>\nimport {Message} from \"element-ui\";\nimport {getMenuToRole, getRoleMenu} from \"@/api/system/menu\";\nimport {addRoleMenu} from \"@/api/system/role\";\n\nexport default {\n  name: \"RoleMenuDialog\",\n  data() {\n    return {\n      //菜单树\n      showTree: false,\n      tree: [],\n      defaultProps: {\n        children: 'children',\n        label: 'menuName'\n      },\n      roleId: null,\n      drawer: false,\n    }\n  },\n  created() {\n    //获取菜单资源数据\n    getMenuToRole().then(response => {\n      this.tree = response.data;\n      //设置首页为不可选状态\n      this.tree.map(item => {\n        if (item.menuName === '首页') item['disabled'] = true\n      })\n    });\n  },\n  methods: {\n    /**角色分配菜单*/\n    getRoleMenu(roleId) {\n      this.roleId = roleId\n      this.showTree = true\n      //通过角色获取菜单id 默认选中\n      const nodes = []\n      getRoleMenu(roleId).then(res => {\n        this.$nextTick(() => {\n          res.data.forEach(item => {\n            //默认添加首页\n            if (item.menuName === '首页') {\n              nodes.push(item)\n            } else {\n              const node = this.$refs.tree.getNode(item);\n              if (node.isLeaf) { //关键，过滤掉不是叶子节点的\n                nodes.push(item)\n              }\n            }\n          })\n          this.$refs.tree.setCheckedNodes(nodes, true)\n        })\n      })\n    },\n    /**\n     * 取消\n     */\n    cancel() {\n      this.showTree = false;\n    },\n    /**\n     * 分配菜单提交\n     */\n    submitTree() {\n      //获取子节点未全选时的父节点id\n      const parentArr = this.$refs.tree.getHalfCheckedKeys();\n      //获取所有选中节点的id\n      const childArr = this.$refs.tree.getCheckedKeys();\n      //拼接数组\n      const permissionParams = parentArr.concat(childArr);\n      //调用接口\n      addRoleMenu(this.roleId, permissionParams).then(res => {\n        if (res.code === 200) {\n          // sessionStorage.removeItem(this.roleId + '角色菜单')\n          Message.success(res.message);\n        }\n      })\n      this.showTree = false\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n.el-trees {\n  height: 520px;\n  margin-left: 5px;\n  overflow: auto\n}\n\n.drawer-button {\n  margin-top: 30px;\n  text-align: center\n}\n</style>\n"]}]}