{"remainingRequest":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a-project\\course-assistance-system-master\\management-system-vue\\src\\views\\scas\\replies\\index.vue?vue&type=style&index=0&id=05e20cd8&lang=css&","dependencies":[{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\src\\views\\scas\\replies\\index.vue","mtime":1713709431000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\a-project\\course-assistance-system-master\\management-system-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWwtdG9vbHRpcF9fcG9wcGVyIHsKICBtYXgtd2lkdGg6IDUwJQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0KA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/scas/replies","sourcesContent":["<template>\n  <div class=\"system-user-container layout-padding\">\n    <el-card shadow=\"hover\" class=\"layout-padding-auto\">\n      <div class=\"system-user-search mb15\">\n<!--        <el-input size=\"medium\" v-model=\"tableData.param.dictName\" placeholder=\"请输入字典名称\"-->\n<!--                  style=\"max-width: 180px\"></el-input>-->\n<!--        <el-button size=\"medium\" type=\"primary\" class=\"ml10\" icon=\"el-icon-search\" @click=\"getTableData()\">-->\n<!--          查询-->\n<!--        </el-button>-->\n        <el-button size=\"medium\" type=\"success\" class=\"ml10\" icon=\"el-icon-folder-add\"\n                   v-hasPermi=\"['scas:replies:add']\"\n                   @click=\"openAddOrUpdate('add',1)\">\n          新增\n        </el-button>\n      </div>\n\n      <el-table :data=\"tableData.data\" v-loading=\"tableData.loading\" style=\"width: 100%;min-height:calc(100vh - 320px)\">\n        <el-table-column type=\"index\" label=\"序号\" align=\"center\" width=\"60\"/>\n        <el-table-column prop=\"courseName\" label=\"课程\" align=\"center\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"userName\" label=\"提问者\" align=\"center\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"questionText\" label=\"提问内容\" align=\"center\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"replyText\" label=\"回复内容\" align=\"center\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"questionDate\" label=\"提问日期\" align=\"center\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"replyDate\" label=\"回复日期\" align=\"center\" show-overflow-tooltip></el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"150px\">\n          <template #default=\"scope\">\n            <el-button size=\"small\"\n                       type=\"text\"\n                       v-if=\"!scope.row.replyText\"\n                       v-hasPermi=\"['scas:replies:update']\"\n                       @click=\"openAddOrUpdate('edit', scope.row)\"\n            >修改\n            </el-button>\n            <el-button size=\"small\"\n                       type=\"text\"\n                       v-if=\"!scope.row.replyText\"\n                       v-hasPermi=\"['scas:replies:reply']\"\n                       @click=\"openAddOrUpdate('reply', scope.row)\"\n            >回复\n            </el-button>\n            <el-button size=\"small\"\n                       type=\"text\"\n                       v-hasPermi=\"['scas:replies:delete']\"\n                       @click=\"onRowDel(scope.row)\">删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <el-pagination\n          @size-change=\"onHandleSizeChange\"\n          @current-change=\"onHandleCurrentChange\"\n          class=\"mt15\"\n          :pager-count=\"5\"\n          :page-sizes=\"[10, 20, 30]\"\n          v-model:current-page=\"tableData.param.pageNum\"\n          background\n          v-model:page-size=\"tableData.param.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"tableData.total\"\n      >\n      </el-pagination>\n    </el-card>\n\n    <RepliesDialog ref=\"RepliesDialogRef\" @refresh=\"getTableData()\"/>\n  </div>\n</template>\n\n<script>\nimport {Message, MessageBox} from \"element-ui\";\n\nimport {delReplies, getReplies} from \"@/api/scas/replies\";\nimport {getCreate} from \"@/api/scas/course\";\n\nexport default {\n  name: 'Replies',\n  data() {\n    return {\n      tableData: {\n        data: [],\n        total: 0,\n        loading: false,\n        param: {\n          dictName: '',\n          pageNum: 1,\n          pageSize: 10,\n        },\n      },\n    };\n  },\n  components: {\n    RepliesDialog: () => import('./dialog.vue'),\n  },\n  mounted() {\n    this.getTableData();\n    this.getCreateCourse();\n  },\n  methods: {\n    /**\n     * 获取菜单\n     */\n    getTableData() {\n      this.tableData.loading = true;\n      getReplies(this.tableData.param).then(res => {\n        this.tableData.data = res.data.list;\n        this.tableData.total = res.data.total;\n        setTimeout(() => {\n          this.tableData.loading = false;\n        }, 500);\n      })\n    },\n    getCreateCourse() {\n      getCreate(1).then(res => {\n        this.createCourse = res.data;\n      })\n    },\n    /**\n     * 添加或修改弹框\n     * @param flag\n     * @param row\n     */\n    openAddOrUpdate(flag, row) {\n      this.$refs.RepliesDialogRef.createCourse = this.createCourse;\n      this.$refs.RepliesDialogRef.openDialog(flag,row)\n    },\n    /**\n     * 删除字典\n     * @param row\n     */\n    onRowDel(row) {\n      const replyId = row.replyId\n      //提示\n      MessageBox.confirm(`此操作将永久删除，是否继续?`, '提示', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(() => {\n        //调用删除方法\n        delReplies(replyId).then(res => {\n          this.getTableData();\n          Message.success(\"删除成功\");\n        })\n      }).catch(() => {\n      });\n    },\n    /**\n     * 修改每页所存数据量的值所触发的函数\n     * @param val\n     */\n    onHandleSizeChange(val) {\n      // 修改页的大小\n      this.tableData.param.pageSize = val;\n      // 按新的pageNo和pageSize进行查询\n      this.getTableData();\n    },\n    /**\n     * 修改当前页所触发的函数\n     * @param val\n     */\n    onHandleCurrentChange(val) {\n      // 更新当前的页\n      this.tableData.param.pageNum = val;\n      // 按新的pageNo和pageSize进行查询\n      this.getTableData();\n    },\n  }\n};\n</script>\n\n<style>\n.el-tooltip__popper {\n  max-width: 50%\n}\n</style>\n"]}]}